# How many Iroha peers (containers) are deployed on each host. Can be set on a per-host level.
# Minimum total nodes is 4 (3f+1) in order for consensus to work properly.
#
# Default: 4
iroha_replicas: 4

# DANGER!!!
# Set it to `true` to full clean ALL existing iroha data before deployment process.
# All peer keys, blockstore, configs will be DELETED!
iroha_forced_cleaning: False

# Whether to use custom hostname for EACH container.
# If set to `true`, Iroha peers will communicate using these hostnames. Hostnames should be set using
# `iroha_hostnames` variable. See example in `ansible/roles/iroha-docker/README.md `.
# If set to `false`, Iroha peers will communicate by IP addresses set by `inventory_hostname`
# variable. Container and service names in Docker Compose files will be auto-generated.
#
# Default: false
iroha_custom_hostnames: false

# Affects how Iroha peers are communicated.
# If set to `internal` Iroha will use docker bridge network to communicate between nodes. You can only use this mode if you want to deploy all nodes on one host  
# If set to `overlay` Iroha will create a docker overlay network to communicate between node. Overlay network plugin (like Calico) or docker swarm should be enabled on all host.
# If set to `external` Iroha will map the port to host system and will use it to communicate.
#
# Default: external
iroha_network: external
# Docker network name
# The network will be created automatically.
iroha_network_name: iroha-net
# Overlay network settings
iroha_network_address: '10.10.111.0/24'
iroha_network_gateway: '10.10.111.1'
# If you want to connect Iroha to already existing docker network
# set name of network to this variable
# docker network should be created befog staring Iroha docker
iroha_additional_docker_networks: []

## Deployment configs
iroha_container_basename: iroha
# Path on a remote machine for generated configs
iroha_deploy_dir: /opt/iroha-deploy
# Path to store docker volume
iroha_volume_dir: ""

# The role is incompatible with Iroha versions below RC2 since keys format has changed.
# Apply the patch (files/old-keys-format.patch) if you need support for previous Iroha versions.

iroha_docker_image_pull: true
iroha_docker_image: 'hyperledger/iroha'
iroha_docker_tag: '1.1.0'

# Use this parameter to start Iroha with additional command line option.
# Example, enabling WSV Reuse:
# iroha_docker_commands:
#  - '--reuse_state'


iroha_postgres_docker_image: 'postgres' 
iroha_postgres_docker_tag: '9.5'

# Role will create iroha-db-net to connect postgres and Iroha,
# depend on you case you may need to connect to iroha postgres from different container.
# you can set this variable to connect Iroha postgres to external docker network
# docker network should be created befog staring Iroha docker
iroha_postgres_additional_docker_networks: []

# Iroha-utils docker image variables 
iroha_util_docker_image: 'iroha-docker-iroha-python'
# Set to `true` to disable building iroha utils
iroha_util_custom_image: false

## Iroha config
# This value will be used as a base peer port for Iroha container. E.g. setting `iroha_replicas` option to
# 6 will generate Docker Compose file with port numbers starting from 10001 counting up to 10006.
# If `iroha_custom_hostnames` set to `true` AND contains port numbers this option is ignored
iroha_peer_port: 10001
# As above but for base Torii port
iroha_torii_port: 50051
# Enables 2 phase commit optimization. Postgres documentation suggests setting it to a max number of
# connections, which is 100 by default
iroha_postgres_commands: '-c max_prepared_transactions=100'

# Rest of the options affect Iroha configuration
# See https://iroha.readthedocs.io/en/latest/guides/configuration.html#configuration
# for more info.
iroha_max_proposal_size: 10
iroha_proposal_delay: 5000
iroha_vote_delay: 5000
iroha_mst_enable: 'false'
iroha_postgres_user: postgres
iroha_postgres_password: postgres
iroha_postgres_host: iroha-postgres
iroha_postgres_port: 5432
# set it to empty line (e.g "") to use postgres instead of files for storing blocks (iroha 1.2.0+)
iroha_blockstore_path: /tmp/block_store
#iroha_mst_expiration_time: 1440
#iroha_max_rounds_delay: 3000
#iroha_stale_stream_max_rounds: 2
#iroha_custom_config_params: '
#"log": {
#  "level": "info",
#  "children": {
#    "Irohad": {
#      "children": {
#        "Consensus": {
#          "level": "warning"
#        },
#        "Synchronizer": {
#          "level": "warning"
#        }
#      }
#    }
#  }
#}'

## Custom Docker configuration
# Docker container environment variables
iroha_docker_env_variables: {}
# Docker iroha container labels
iroha_docker_labels: {}
# Docker postgres container labels
iroha_postgres_docker_labels: {}

## Iroha logging
# Maximum docker log file size
iroha_docker_logging_max_size: '100m'
# The amount of individual docker log files
iroha_docker_logging_max_file: 3

## Iroha RAM limit
# Maximum amount of RAM, it only limits the docker container (e.g. '1024m')
iroha_docker_mem_limit: ''

##  Iroha logs
# Enable debug log
iroha_log_debug: False

## Iroha service
# Iroha commands run on host which has 'iroha_service_host' variable set to true
# You need to select any node and set this variable to `True`
iroha_service_host: False
# Service account used for execute iroha commands (like 'AddPeer')
# Account must have permissions: 'can_add_peer', 'can_get_blocks'
iroha_service_account: ''
#  The number of keys must match the quorum settings
iroha_service_account_keys: []

## Iroha peer keys
# Role will store automatically generated peer keys in this file:
iroha_peer_keys_file: "{{ playbook_dir }}/vars/iroha_peer_keys.yml"
# If you want that private peer keys will be encrypted during storage you have to enable this parameter:
iroha_peer_keys_ansible_encrypt_enable: false
# If you activated previous option you have to set path to your ansible vault file
iroha_peer_keys_ansible_encrypt_password_file: ''

# Iroha Genesis Block
# The role will fill your Genesis Block with Iroha peers while preserving everything else
# You can find example private keys for accounts in https://github.com/hyperledger/iroha/tree/master/example
iroha_genesis_block: '
  {
    "block_v1":{
      "payload":{
        "height":"1",
        "prevBlockHash":"0000000000000000000000000000000000000000000000000000000000000000",
        "transactions":[
        {
          "payload":{
            "reducedPayload":{
              "commands":[
              {
                "createRole":{
                  "permissions":[
                    "can_add_peer",
                    "can_add_signatory",
                    "can_create_account",
                    "can_create_domain",
                    "can_get_all_acc_ast",
                    "can_get_all_acc_ast_txs",
                    "can_get_all_acc_detail",
                    "can_get_all_acc_txs",
                    "can_get_all_accounts",
                    "can_get_all_signatories",
                    "can_get_all_txs",
                    "can_get_blocks",
                    "can_get_roles",
                    "can_read_assets",
                    "can_remove_signatory",
                    "can_set_quorum"
                  ],
                  "roleName":"admin"
                }
              },
              {
                "createRole":{
                  "permissions":[
                    "can_add_signatory",
                    "can_get_my_acc_ast",
                    "can_get_my_acc_ast_txs",
                    "can_get_my_acc_detail",
                    "can_get_my_acc_txs",
                    "can_get_my_account",
                    "can_get_my_signatories",
                    "can_get_my_txs",
                    "can_grant_can_add_my_signatory",
                    "can_grant_can_remove_my_signatory",
                    "can_grant_can_set_my_account_detail",
                    "can_grant_can_set_my_quorum",
                    "can_grant_can_transfer_my_assets",
                    "can_receive",
                    "can_remove_signatory",
                    "can_set_quorum",
                    "can_transfer"
                  ],
                  "roleName":"user"
                }
              },
              {
                "createRole":{
                  "permissions":[
                    "can_add_asset_qty",
                    "can_create_asset",
                    "can_receive",
                    "can_transfer"
                  ],
                  "roleName":"money_creator"
                }
              },
              {
                "createDomain":{
                  "defaultRole":"user",
                  "domainId":"test"
                }
              },
              {
                "createAsset":{
                  "assetName":"coin",
                  "domainId":"test",
                  "precision":2
                }
              },
              {
                "createAccount":{
                  "accountName":"admin",
                  "domainId":"test",
                  "publicKey":"313a07e6384776ed95447710d15e59148473ccfc052a681317a72a69f2a49910"
                }
              },
              {
                "createAccount":{
                  "accountName":"test",
                  "domainId":"test",
                  "publicKey":"716fe505f69f18511a1b083915aa9ff73ef36e6688199f3959750db38b8f4bfc"
                }
              },
              {
                "appendRole":{
                  "accountId":"admin@test",
                  "roleName":"admin"
                }
              },
              {
                "appendRole":{
                  "accountId":"admin@test",
                  "roleName":"money_creator"
                }
              },
              {
                "addPeer":{
                  "peer":{
                    "address":"iroha-0-3ada5cb:10001",
                    "peerKey":"3e5b449f650372b04ba979b9eb87e39f3349563adffa27e4b26c8afb1ec3f7e0"
                  }
                }
              },
              {
                "addPeer":{
                  "peer":{
                    "address":"iroha-1-4deedc6:10001",
                    "peerKey":"34efa4ed858a3c1e22b1bbdcff04385f4e67bc80086237daa2ee9b8505f5a07a"
                  }
                }
              },
              {
                "addPeer":{
                  "peer":{
                    "address":"iroha-2-2bfed1e:10001",
                    "peerKey":"c66605e7b2ae2cdd2eb2aa7ed92f9263150254ddcda464937957ef216cf4237f"
                  }
                }
              },
              {
                "addPeer":{
                  "peer":{
                    "address":"iroha-3-abea4f7:10001",
                    "peerKey":"76ab0ae0959529c7abb78e05de5ec8620426fde48fc9eae1b75783b77f9358d1"
                  }
                }
              },
              {
                "addPeer":{
                  "peer":{
                    "address":"iroha-4-da317bc:10001",
                    "peerKey":"73995ca2c1dba061042cb995d021b24dfeec9b7a81bd5facb258ffb97e7d97b6"
                  }
                }
              }
              ],
              "quorum":1
            }
          }
        }
        ],
        "txNumber":1
      }
    }
  }'
