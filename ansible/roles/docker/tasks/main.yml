---
  - name: check Docker binary
    stat:
      path: "/usr/bin/docker"
    register: docker_binary

  - name: check Docker version
    command: "/usr/bin/docker --version"
    register: docker_version
    when: "docker_binary.stat.exists"
    changed_when: False
    failed_when: False

  - name: process docker_version.stdout var
    set_fact:
      docker_version: "{{ docker_version.stdout | regex_search('[0-9]+\\.[0-9]+\\.[0-9]+') }}"
    when: "docker_binary.stat.exists"

  - debug:
      var: docker_version

  - name: process dockerVersion
    set_fact:
      docker_version_desired: "{{ dockerVersion | regex_search('[0-9]+\\.[0-9]+\\.[0-9]+') }}"

  - name: check Docker Compose binary
    stat:
      path: "/usr/local/bin/docker-compose"
    register: docker_compose_binary

  - name: check Docker Compose version
    command: "docker-compose --version"
    register: docker_compose_version
    when: "docker_compose_binary.stat.exists"
    changed_when: False
    failed_when: False

  - name: process docker_compose_version.stdout var
    set_fact:
      docker_compose_version: "{{ docker_compose_version.stdout | regex_search('[0-9]+\\.[0-9]+\\.[0-9]+') }}"
    when: "docker_compose_binary.stat.exists"

  - name: install/upgrade Docker, if needed
    include: install_docker.yml
    when: not docker_binary.stat.exists or dockerVersion is not defined or docker_version_desired is not version(docker_version, operator="eq")

  - name: install/upgrade Docker Compose, if needed
    include: install_compose.yml
    when: not docker_compose_binary.stat.exists or dockerComposeVersion is not defined or dockerComposeVersion is not version(docker_compose_version, operator="eq")
