---
  - name: Make CSV header
    shell: "echo 'host;port;priv_key_b64_encoded;pub_key_b64_encoded' > {{ playbook_dir }}/scripts/peers.csv"
    args:
      chdir: "{{ playbook_dir }}/../../roles/iroha-k8s/files"

  - name: Make keys
    shell: "{{ playbook_dir }}/scripts/ed25519-cli keygen | tr -d [:blank:] | cut -d':' -f2"
    loop: "{{ range(replicas|int)|list }}"
    register: result

  - name: Generate CSV with peers
    shell: >
      echo '{{ pod_basename }}-{{ item }}.{{ service_name }};{{ iroha_port }};{{ result.results[item].stdout_lines[0] }};{{ result.results[item].stdout_lines[1] }}'
      >> {{ playbook_dir }}/scripts/peers.csv
    args:
      chdir: "{{ playbook_dir }}/../../roles/iroha-k8s/files"
    loop: "{{ range(replicas|int)|list }}"

  - name: Generate config.docker
    template:
      src: config.docker.j2
      dest: "{{ playbook_dir }}/../../roles/iroha-k8s/files/conf/config.docker"
    delegate_to: localhost

  - name: Make genesis block file
    command: >
      python3 {{ playbook_dir }}/scripts/genesis-add-peers.py add_iroha_peers {{ playbook_dir }}/scripts/peers.csv genesis.block
    args:
      chdir: "{{ playbook_dir }}/../../roles/iroha-k8s/files"

  - name: Move genesis block
    command: "cp genesis.block conf/genesis.block"
    args:
      chdir: "{{ playbook_dir }}/../../roles/iroha-k8s/files"

  - name: Get peer keys for secrets
    command: >
      python3 {{ playbook_dir }}/scripts/genesis-add-peers.py print_keys_b64 {{ playbook_dir }}/scripts/peers.csv genesis.block
    args:
      chdir: "{{ playbook_dir }}/../../roles/iroha-k8s/files"
    register: peer_keys

  - name: Generate k8s secrets
    template:
      src: k8s-peer-keys.yaml.j2
      dest: "{{ playbook_dir }}/../../roles/iroha-k8s/files/k8s-peer-keys.yaml"
    delegate_to: localhost

  - name: Generate k8s config
    template:
      src: k8s-iroha.yaml.j2
      dest: "{{ playbook_dir }}/../../roles/iroha-k8s/files/k8s-iroha.yaml"
    delegate_to: localhost
